<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php // Start Invoice Create Function   ?>
<?php 
function invoice_create_direct($order_id,$payment_status) // Create Invoice Dynamically by Order ID
{ 
	$order = Mage::getModel("sales/order")->load($order_id);  // Get Order Details using Order ID
	try 
	{
		if(!$order->canInvoice())
		{
			Mage::throwException(Mage::helper('core')->__('Cannot create an invoice.'));
		}
		$invoice = Mage::getModel('sales/service_order', $order)->prepareInvoice();
		if (!$invoice->getTotalQty()) 
		{
			Mage::throwException(Mage::helper('core')->__('Cannot create an invoice without products.'));
		}
		
		$invoice->setRequestedCaptureCase(Mage_Sales_Model_Order_Invoice::CAPTURE_ONLINE);	// Set Invoice Record Request
		
	// Comment For Only Invoice 
	$commentbyme="Status Updated by Admin";
	if (!empty($commentbyme)) { Mage::getSingleton('adminhtml/session')->setCommentText($commentbyme); }		
        if (!empty($commentbyme)) 
		{
			$invoice->addComment(
				$commentbyme,
				isset($data['comment_customer_notify']),
				isset($data['is_visible_on_front'])
			);
        }			
			
		$invoice->register();					// Invoice Register for new Invoice 
		$transactionSave = Mage::getModel('core/resource_transaction')
			->addObject($invoice)
			->addObject($invoice->getOrder());
		$transactionSave->save();				  
				
		$order->setData('state', "processing");		 // Set Order State Update
		$order->setStatus($payment_status);			// Set Order Status
		//$order->addStatusToHistory($order->getStatus(),$commentbyme, false);
        $order->save();				// Set Order Save Data of invoice
	}
	catch (Mage_Core_Exception $e) 	{	}
	$invoice->setRequestedCaptureCase( Mage_Sales_Model_Order_Invoice::CAPTURE_OFFLINE );	
	//$order->_redirect('*/sales_order/view', array('order_id' => $order_id));
}
// End Invoice Create Function

// Start Comment Add after Change Status
function comment_create_dynamically($order_comment_id)
{
	$user = Mage::getSingleton('admin/session'); // get current logged in user Collection
	$current_userFirstname = $user->getUser()->getFirstname();
	$current_userLastname = $user->getUser()->getLastname();
	$current_Username = $user->getUser()->getUsername();
	
	$commentbyme="Order status updated by ".$current_userFirstname." ".$current_userLastname." [".$current_Username."] ";
	$order = Mage::getModel("sales/order")->load($order_comment_id);  // Set Order Details using Order ID
	$order->addStatusToHistory($order->getStatus(),$commentbyme, false);       //  Add/Set Order Comment for status 
	$order->save();
}
// End Comment Add after Change Status

// Create Shipment  Order
function shipment_create_direct($ordered_id)
{
	$order = Mage::getModel('sales/order')->load($ordered_id);

	//create shipment
	$itemQty =  $order->getItemsCollection()->count();
	$shipment = Mage::getModel('sales/service_order', $order)->prepareShipment($itemQty);
	$shipment = new Mage_Sales_Model_Order_Shipment_Api();
	$shipmentId = $shipment->create( $order->getIncrementId(), array(), 'Shipment created through ShipMailInvoice', true, true);
	
	//add tracking info
	$shipment_collection = Mage::getResourceModel('sales/order_shipment_collection');
	$shipment_collection->addAttributeToFilter('order_id', $ordered_id);
	foreach($shipment_collection as $sc)
	{
		$shipment = Mage::getModel('sales/order_shipment');
		$shipment->load($sc->getId());
		if($shipment->getId() != '')
		{ 
			try
			{
				Mage::getModel('sales/order_shipment_track')
				->setShipment($shipment)
				->setData('title', 'carrier')
				->setData('number', $trackInfo)
				->setData('carrier_code', 'custom')
				->setData('order_id', $shipment->getData('order_id'))
				->save();
			}
			catch (Exception $e)
			{
				Mage::getSingleton('core/session')->addError('order id '.$ordered_id.' no found');
			}
		}
	}
	// change order status to complete
	$order->addStatusToHistory(Mage_Sales_Model_Order::STATE_COMPLETE);
	$order->setData('state', Mage_Sales_Model_Order::STATE_COMPLETE);
	$order->save();
}

$current_url=Mage::helper('core/url')->getCurrentUrl();
$param="?"; $str=$current_url;rtrim($str,$param);$pos = strpos($str, $param);$endpoint = $pos + strlen($param);
$newStr = substr($str,0,$endpoint );

if(isset($_GET['create_invoice']))
{
	invoice_create_direct($this->getOrder()->getId(),$_GET['status_value']);
	comment_create_dynamically($this->getOrder()->getId());	
	echo "Invoice has been Generate <script>location.href='".$newStr."'</script>";	
}
if(isset($_GET['create_shipment']))
{
	shipment_create_direct($this->getOrder()->getId());
//	comment_create_dynamically($this->getOrder()->getId());	
	echo "Shipment has been Generated <script>location.href='".$newStr."'</script>";	
}
?>
<?php  
$core_resource = Mage::getSingleton('core/resource');
$read = $core_resource->getConnection('core_read');
$table_name=$core_resource->getTableName('sales_flat_order_item');
$result = $read->fetchAll("select qty_invoiced from ".$table_name." where order_id = ".$this->getOrder()->getId()." LIMIT 1");

foreach($result as $result)
{
	$invoice_check= $result['qty_invoiced'];
}
		// Start  Get Payment method Code Name
	$order_id=$this->getOrder()->getId(); 
	$order = Mage::getModel("sales/order")->load($order_id); //load order by order id 
	$payment_method_code = $order->getPayment()->getMethodInstance()->getCode();//purchaseorder //ccsave 
		// End  Get Payment method Code Name
?>
<?php // End   Invoice Create Function   ?>
<?php //echo $this->getChildHtml('orderstatus_sales_order_view_orderstatus');?>

<div id="order_history_block">
    <?php if ($this->canAddComment()):?>
    <div id="history_form" class="order-history-form">
        <div><?php echo Mage::helper('sales')->__('Add Order Comments') ?></div>		
		
        <span class="field-row">
            <label class="normal" for="history_status"><?php echo Mage::helper('sales')->__('Status') ?></label><br/>
            <select name="history[status]" class="select" id="history_status">			
            <?php foreach ($this->getStatuses() as $_code=>$_label): ?>		
			
			<?php // Start  
			if($payment_method_code=='purchaseorder') 
			{ 
				if($_code=='pending'   || $_code=='paid'  || $_code=='pending_payment') 
				{ 
					$_codestyle='style="display: none;"';
				}  
				else
				{ 
					$_codestyle='style="display: block;"';
				}
			} 
			if($payment_method_code<>'purchaseorder') 
			{
				if($_code=='pending'  || $_code=='approved'  || $_code=='pendingapproved') 
				{ 
					$_codestyle='style="display: none;"';
				} 
				else
				{ 
					$_codestyle='style="display: block;"';
				}
			}
				
			// End 
			?>
			
                <option value="<?php echo $_code ?>"<?php if($_code==$this->getOrder()->getStatus()): ?> selected="selected"<?php endif; echo $_codestyle; ?> ><?php echo $_label ?></option>			
            <?php endforeach; ?>
			
            </select>
<?php if($invoice_check < 1) { ?>
	<form method='get'>
<?php 
	if($order->getStatus() != 'canceled' && $order->getState() != 'complete'){
		if($payment_method_code=='purchaseorder') { 
			echo '<input type="submit" class="form-button" name="create_invoice" id="create_invoice" value="Approved"/><input type="hidden" name="status_value" value="approved" />';
		}
		else { echo '<input type="submit" class="form-button" name="create_invoice" id="create_invoice" value="Paid"/> <input type="hidden" name="status_value" value="paid" />'; }
	}
?>
	</form>
<?php } ?> 
        </span>
        <span class="field-row">
            <label class="normal" for="history_comment"><?php echo Mage::helper('sales')->__('Comment') ?></label>
            <textarea name="history[comment]" rows="3" cols="5" style="height:6em; width:99%;" id="history_comment"></textarea>
        </span>
        <div class="f-left">
            <?php if ($this->canSendCommentEmail()): ?>
                <input name="history[is_customer_notified]" type="checkbox" id="history_notify" value="1" /><label class="normal" for="history_notify"> <?php echo Mage::helper('sales')->__('Notify Customer by Email') ?></label><br />
            <?php endif; ?>
            <input name="history[is_visible_on_front]" type="checkbox" id="history_visible" value="1" /><label class="normal" for="history_visible"> <?php echo Mage::helper('sales')->__('Visible on Frontend') ?></label>
        </div>
        <div class="f-right">
            <?php echo $this->getChildHtml('submit_button') ?>
        </div>
        <div class="clear"></div>
    </div>
    <div class="divider"></div>
    <?php endif;?>
    <ul class="note-list">
    <?php foreach ($this->getOrder()->getStatusHistoryCollection(true) as $_item): ?>
        <li>
            <strong><?php echo $this->helper('core')->formatDate($_item->getCreatedAtDate(), 'medium') ?></strong>
            <?php echo $this->helper('core')->formatTime($_item->getCreatedAtDate(), 'medium') ?><span class="separator">|</span><strong><?php echo $_item->getStatusLabel() ?></strong><br/><small><?php echo $this->helper('sales')->__('Customer') ?>
            <strong class="subdue">
                <?php if ($this->isCustomerNotificationNotApplicable($_item)): ?>
                <?php echo $this->helper('sales')->__('Notification Not Applicable') ?>
                <?php elseif ($_item->getIsCustomerNotified()): ?>
                <?php echo $this->helper('sales')->__('Notified') ?>
                <img src="<?php echo $this->getSkinUrl('images/ico_success.gif') ?>" width="16" height="16" alt="" />
                <?php else: ?>
                <?php echo $this->helper('sales')->__('Not Notified') ?>
                <?php endif; ?>
            </strong></small>
            <?php if ($_item->getComment()): ?>
                <br/><?php echo $this->escapeHtml($_item->getComment(), array('b','br','strong','i','u')) ?>
            <?php endif; ?>
        </li>
    <?php endforeach; ?>
    </ul>
    <script type="text/javascript">
    if($('order_status'))$('order_status').update('<?php echo $this->getOrder()->getStatusLabel() ?>');
    </script>
</div>
